# Nginx configuration for StepheyBot Music Services
# This configuration handles routing for all music-related services

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=music_api:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=music_stream:10m rate=120r/m;
limit_req_zone $binary_remote_addr zone=music_admin:10m rate=10r/m;

# Upstream definitions for music services
upstream navidrome_backend {
    server navidrome:4533;
    keepalive 32;
}

upstream lidarr_backend {
    server lidarr:8686;
    keepalive 16;
}

upstream listenbrainz_backend {
    server listenbrainz:8080;
    keepalive 16;
}

upstream stepheybot_music_backend {
    server stepheybot-music:8083;
    keepalive 16;
}

# Main music streaming server - music.stepheybot.dev
server {
    listen 80;
    server_name music.stepheybot.dev;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Main music interface (Navidrome)
    location / {
        # Rate limiting for general access
        limit_req zone=music_stream burst=20 nodelay;

        proxy_pass http://navidrome_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;

        # OAuth2 user information
        proxy_set_header Remote-User $http_x_auth_request_user;
        proxy_set_header Remote-Name $http_x_auth_request_preferred_username;
        proxy_set_header Remote-Email $http_x_auth_request_email;

        # Timeouts for streaming
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;

        # Buffer settings for streaming
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_max_temp_file_size 0;

        # WebSocket support
        proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
        proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
        proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
    }

    # Audio streaming endpoint - optimized for large files
    location ~* ^/rest/stream {
        limit_req zone=music_stream burst=50 nodelay;

        proxy_pass http://navidrome_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Remote-User $http_x_auth_request_user;

        # Optimize for streaming
        proxy_buffering off;
        proxy_cache off;
        proxy_request_buffering off;
        proxy_max_temp_file_size 0;

        # Extended timeouts for large file downloads
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # Range request support for seeking
        proxy_set_header Range $http_range;
        proxy_set_header If-Range $http_if_range;
    }

    # API endpoints - rate limited
    location ~* ^/rest/ {
        limit_req zone=music_api burst=10 nodelay;

        proxy_pass http://navidrome_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Remote-User $http_x_auth_request_user;

        # API caching for metadata
        proxy_cache_valid 200 302 5m;
        proxy_cache_valid 404 1m;
    }

    # Admin routes - OAuth2 protected
    location ~* ^/(admin|app) {
        # Strict rate limiting for admin access
        limit_req zone=music_admin burst=5 nodelay;

        # OAuth2 authentication
        auth_request /oauth2/auth;
        error_page 401 = /oauth2/sign_in;

        # Pass auth information
        auth_request_set $user $upstream_http_x_auth_request_user;
        auth_request_set $email $upstream_http_x_auth_request_email;
        auth_request_set $auth_groups $upstream_http_x_auth_request_groups;

        proxy_pass http://navidrome_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Remote-User $user;
        proxy_set_header Remote-Email $email;
        proxy_set_header Remote-Groups $auth_groups;
    }

    # OAuth2 proxy endpoints
    location /oauth2/ {
        proxy_pass http://oauth2-proxy:4180;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# Music management interface - manage.music.stepheybot.dev
server {
    listen 80;
    server_name manage.music.stepheybot.dev;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # All management routes require OAuth2 authentication
    location / {
        limit_req zone=music_admin burst=10 nodelay;

        # OAuth2 authentication
        auth_request /oauth2/auth;
        error_page 401 = /oauth2/sign_in;

        auth_request_set $user $upstream_http_x_auth_request_user;
        auth_request_set $email $upstream_http_x_auth_request_email;

        proxy_pass http://lidarr_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Remote-User $user;
        proxy_set_header Remote-Email $email;

        # WebSocket support for real-time updates
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # API endpoints
    location /api/ {
        limit_req zone=music_api burst=20 nodelay;

        auth_request /oauth2/auth;
        auth_request_set $user $upstream_http_x_auth_request_user;

        proxy_pass http://lidarr_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Remote-User $user;
    }

    # OAuth2 proxy
    location /oauth2/ {
        proxy_pass http://oauth2-proxy:4180;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Music analytics and recommendations - analytics.music.stepheybot.dev
server {
    listen 80;
    server_name analytics.music.stepheybot.dev;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;

    # ListenBrainz interface
    location /listenbrainz/ {
        limit_req zone=music_api burst=15 nodelay;

        rewrite ^/listenbrainz/(.*) /$1 break;
        proxy_pass http://listenbrainz_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # StepheyBot Music Brain API
    location /api/ {
        limit_req zone=music_api burst=30 nodelay;

        proxy_pass http://stepheybot_music_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS headers for API access
        add_header Access-Control-Allow-Origin "https://music.stepheybot.dev" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials "true" always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://music.stepheybot.dev";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
            add_header Access-Control-Max-Age 3600;
            add_header Content-Type text/plain;
            add_header Content-Length 0;
            return 204;
        }
    }

    # Admin endpoints - protected
    location /admin/ {
        limit_req zone=music_admin burst=5 nodelay;

        auth_request /oauth2/auth;
        error_page 401 = /oauth2/sign_in;

        auth_request_set $user $upstream_http_x_auth_request_user;
        auth_request_set $email $upstream_http_x_auth_request_email;

        proxy_pass http://stepheybot_music_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Remote-User $user;
        proxy_set_header Remote-Email $email;
    }

    # Health checks
    location /health {
        limit_req zone=music_api burst=60 nodelay;

        proxy_pass http://stepheybot_music_backend;
        access_log off;
    }

    # Metrics endpoint (for monitoring)
    location /metrics {
        limit_req zone=music_admin burst=5 nodelay;

        auth_request /oauth2/auth;
        auth_request_set $user $upstream_http_x_auth_request_user;

        proxy_pass http://stepheybot_music_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Remote-User $user;

        # Restrict to admin users only
        # You may want to add additional access control here
    }

    # OAuth2 proxy
    location /oauth2/ {
        proxy_pass http://oauth2-proxy:4180;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Default - redirect to main music interface
    location = / {
        return 302 https://music.stepheybot.dev/;
    }
}

# Static assets optimization
location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
    add_header Vary Accept-Encoding;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;
}

# Logging configuration
log_format music_access '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       '$request_time $upstream_response_time '
                       '"$http_x_auth_request_user"';

access_log /var/log/nginx/music_access.log music_access;
error_log /var/log/nginx/music_error.log warn;
