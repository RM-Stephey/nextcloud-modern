{
    # Global options
    email {$EMAIL}

    # Performance tuning
    servers {
        timeouts {
            read_body   5m
            read_header 30s
            write       5m
            idle        5m
        }
        max_header_size 16KB
    }

    # Enable HTTP/3 QUIC
    servers :443 {
        protocols h1 h2 h3
    }
}

# Main Nextcloud domain
{$DOMAIN} {
    # Enable automatic HTTPS
    tls {
        # Optional: Use DNS challenge for wildcard certs
        # dns cloudflare {env.CF_API_TOKEN}
        tls internal
        trusted_proxies 100.64.0.0/10 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16

    }

    # Enable HTTP/2 and HTTP/3
    encode zstd gzip

    # Security headers
    header {
        # Enable HSTS
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

        # Security headers
        X-Content-Type-Options "nosniff"
        X-Frame-Options "SAMEORIGIN"
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "no-referrer-when-downgrade"
        X-Robots-Tag "noindex, nofollow"
        X-Download-Options "noopen"
        X-Permitted-Cross-Domain-Policies "none"

        # Remove server info
        -Server
        -X-Powered-By

        # Feature Policy
        Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=()"
    }

    # Proxy configuration
    handle {
        # Client max body size for large uploads
        request_body {
            max_size 16GB
        }

        # Reverse proxy to nginx
        reverse_proxy web:80 {
            # Load balancing (if you add more web servers)
            lb_policy round_robin

            # Health checks
            health_uri /status.php
            health_interval 30s
            health_timeout 5s
            health_status 200

            # Headers
            header_up Host {host}
            header_up X-Real-IP {remote}
            header_up X-Forwarded-For {remote}
            header_up X-Forwarded-Proto {scheme}
            header_up X-Forwarded-Host {host}

            # Timeouts for large file operations
            flush_interval -1
            transport http {
                read_timeout 3600s
                write_timeout 3600s
                dial_timeout 10s
                response_header_timeout 3600s
            }
        }
    }

    # WebSocket support for Nextcloud Talk
    @websockets {
        header Connection *Upgrade*
        header Upgrade websocket
    }
    handle @websockets {
        reverse_proxy web:80 {
            flush_interval -1
        }
    }

    # Cache static assets
    @static {
        path *.ico *.css *.js *.gif *.jpg *.jpeg *.png *.svg *.woff *.woff2
    }
    handle @static {
        header Cache-Control "public, max-age=15778463"
    }

    # Logging
    log {
        output file /var/log/caddy/access.log {
            roll_size 100MB
            roll_keep 10
            roll_keep_for 90d
        }
        format console
        level INFO
    }
}

# Collabora Online subdomain (optional)
collabora.{$DOMAIN} {
    tls {
        # Use same email as main domain
    }

    encode zstd gzip

    header {
        X-Content-Type-Options "nosniff"
        X-Frame-Options "SAMEORIGIN"
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "no-referrer-when-downgrade"
    }

    # Reverse proxy to Collabora
    reverse_proxy collabora:9980 {
        header_up Host {host}
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}

        transport http {
            read_timeout 3600s
            write_timeout 3600s
        }
    }

    # WebSocket support for Collabora
    @collabora_websocket {
        path /cool/*
        header Upgrade websocket
    }
    handle @collabora_websocket {
        reverse_proxy collabora:9980
    }
}

# Imaginary image service (internal only, accessed by Nextcloud)
# Not exposed externally, only accessible within Docker network

# Redirect www to non-www
www.{$DOMAIN} {
    redir https://{$DOMAIN}{uri} permanent
}

# Health check endpoint
health.{$DOMAIN} {
    respond /health "OK" 200
    header Cache-Control "no-cache, no-store, must-revalidate"
}
